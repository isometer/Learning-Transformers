# %%

import wfdb 
import pandas as pd
import matplotlib.pyplot as plt
# what I've learned:

# the data is organized into two columns representing two different electrodes:
# MLII and V1. Both readings are affected when noise is artifically added.

# the same recordings we have are in the 'mit-bih...' directory and
# were generated by artifically adding 'electrode motion artificats' to
# the ECG signals at various ratios.
# 
# The job of our model is to highlight anomalous windows by reconstruction loss --
# when the model fails to recreate the data sufficiently well, the data could be 
# anomalous. 
#
# Refer to the nstdb.doc file for more documentation on the dataset.

data_path = '../data/mit-bih-noise-stress-test-database-1.0.0/'

# and because I am not enjoying wfdb, let's use dataframes

def plot_signal(signal, title=""):
    # signal is the beginning of the filename, 
    # title is the title to be used for the graph. (defaults to signal)
    filepath = data_path + signal
    record = wfdb.rdrecord(filepath)
    signals_df = pd.DataFrame(record.p_signal, columns=record.sig_name)
    
    title = signal if title == "" else title
    signals_df[:].plot(title=title)
    plt.xlabel('Sample Index')
    plt.ylabel('Amplitude')
    plt.show()


# %%
plot_signal("118e24", title="very clean signal")

# %%

plot_signal("118e_6", title="very noisy signal")

# %%

# now a look at the noise itself

plot_signal("em", title="the noise itself")

# %%

